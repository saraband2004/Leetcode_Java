import java.io.*; 
import java.util.*; 
import java.lang.*;


public class Solution {
	//Given an integer array, sort it in ascending order in place. Use quick sort, merge sort, heap sort or any O(nlogn) algorithm.
	public static void sortIntegers2(int[] A) {
        // write your code here
		if (A==null || A.length==0){return;}
		quickSort(A, 0, A.length-1);
    }
	
	public static void quickSort(int[] A, int left, int right) {
		int mid;
		int i=left;
		int j=right;
		mid=(left+right)/2;
		int pivot=A[mid];
		int temp;
		
		
		
		
		if (left>=right ) {return;}
		if (left+1==right) {
			if (A[left]>A[right]) {
				temp=A[right];
				A[right]=A[left];
				A[left]=temp;
				
				
			}
			return;
			
		}
		
		A[mid]=A[0];
		A[0]=pivot;
		left++;
				
		while (left < right) {
			if (A[left] <= pivot) {
				
				left++;
			}else if (A[right] >= pivot) {
				
				right--;
			}
			else {
				temp=A[left];
				A[left]=A[right];
				A[right]=temp;
			}
		}
		
		if (A[right] < A[0]) {
			temp=A[0];
			A[0]=A[right];
			A[right]=temp;
		}
		
		
		
		for (int x: A) {System.out.print(" "+x);}
		System.out.print(" right:"+right);
		System.out.print("\n");
		
		quickSort(A, i, right-1);
		quickSort(A, right, j);
		
	}
		public static void main(String[] args) {
		// TODO Auto-generated method stub
		//System.out.print("aaa");
		int [] A= { //8,7,6,5,4,3,2,1,0
				19,-10,-2,40,3,36,57,25,66,51,5,40,-8,43,9,-5,0,4,55,28,63,67,-2,35,57,0,0,30,17,55,22,34,-4,42,57,52,4,65,6,-2,8,12,31,43,26,34,31,19,-3,36,34,11,58,23,13,7,17,10,33,-5,10,53,14,56,18,8,-6,-2,37,7		
		};
		sortIntegers2(A);
		for (int i=0;i<A.length;i++) {System.out.print(" "+i);}
		System.out.println(" " );
		for (int x: A) {System.out.print(" "+x);}
	}
	


}
