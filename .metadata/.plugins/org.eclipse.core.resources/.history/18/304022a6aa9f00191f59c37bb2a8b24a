import java.io.*; 
import java.util.*; 
import java.lang.*;

public class Solution {
    public static ArrayList<String> wordBreak(String s, Set<String> dict) {
        // Note: The Solution object is instantiated only once and is reused by each test case.
        Map<String, ArrayList<String>> memo = new HashMap<String, ArrayList<String>>();
        return wordBreakHelper(s, dict, memo);
    }

    public static ArrayList<String> wordBreakHelper(String s,
                                             Set<String> dict,
                                             Map<String, ArrayList<String>> memo){
        if (memo.containsKey(s)) {
            return memo.get(s);
        }
        
        ArrayList<String> results = new ArrayList<String>();
        
        if (s.length() == 0) {
            return results;
        }
        
        if (dict.contains(s)) {
            results.add(s);
        }
        
        for (int len = 1; len < s.length(); ++len){
            String word = s.substring(0, len);
            if (!dict.contains(word)) {
                continue;
            }
            
            String suffix = s.substring(len);
            ArrayList<String> segmentations = wordBreakHelper(suffix, dict, memo);
            
            for (String segmentation: segmentations){
                results.add(word + " " + segmentation);
            }
        }
        
        memo.put(s, results);
        return results;
    }
    
    public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		Set<String> wordDict =new HashSet<>();
		
		//System.out.print(wordDict.contains("apple"));
		
		//ArrayList<String> [] x =new ArrayList<String>[5];
		//System.out.println(s.substring(1, 3));
		List<List<String>> result= new ArrayList<>();
		
		
		List<String> resulttemp=new ArrayList<>();
		//System.out.print( resulttemp.isEmpty() );
		List<String> ans;
		
		
		
		int i=5;
		String a="a";
		while(i<10) {
			wordDict.add(a);
			a=a+"a";
			i++;
		}
		
		
		
		ans=wordBreak("aaaaaaaaaaaaaaaaaaaaaaaaaa", wordDict);
		
		
		
		for (String str: ans) { 			System.out.println(str); 		}
	}
}






