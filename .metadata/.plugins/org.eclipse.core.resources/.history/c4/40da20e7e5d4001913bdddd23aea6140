import java.io.*; 
import java.util.*; 
import java.lang.*;


public class Solution {
    public int findUnsortedSubarray(int[] nums) {
        Stack<Integer> stack = new Stack<>();
        stack.push(0);
        int i = 0;
        int SIZE = 0;
        while(i < nums.length){
            if (stack.isEmpty()){
                stack.push(i);
                i++;
                SIZE++;
            }
            else if (nums[i] >= nums[stack.peek()]){
                stack.push(i);
                i++;
                SIZE++;
            }
            else {
                stack.pop();
                SIZE--;
                //System.out.println("yyy");
            }
        }
        int [] container = new int[SIZE];
        if (stack.size()==nums.length){
            System.out.println("xxx");
            return 0;}
        for (int j = SIZE-1; j>= 0; j--){
            container [j] = stack.pop();
        }
        
        int left = 0;
        while(left < container.length && container[left] == left){
            left++;
        }
        int right = container.length-1;
        int X = nums.length -1;
        //if (left>right){return 0;}
        while(right >=0 && container[right] == X){
            right--;
            X--;
        }
        
        return X - left+2;
    }
	
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[]nums = {1,2,3,4,5};
		System.out.println(new Solution().findUnsortedSubarray(nums));
		
	}   
 

}
